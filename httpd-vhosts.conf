# Virtual Hosts
#
# Required modules: mod_log_config

# If you want to maintain multiple domains/hostnames on your
# machine you can setup VirtualHost containers for them. Most configurations
# use only name-based virtual hosts so the server doesn't need to worry about
# IP addresses. This is indicated by the asterisks in the directives below.
#
# Please see the documentation at 
# <URL:http://httpd.apache.org/docs/2.4/vhosts/>
# for further details before you try to setup virtual hosts.
#
# You may use the command line option '-S' to verify your virtual host
# configuration.

#
# VirtualHost example:
# Almost any Apache directive may go into a VirtualHost container.
# The first VirtualHost section is used for all requests that do not
# match a ServerName or ServerAlias in any <VirtualHost> block.
#
<VirtualHost *:8056>
  ServerAdmin sysadmin@home.labs
  DocumentRoot "/var/lib/www"

  ErrorLog "logs/kibana-error.log"
  CustomLog "logs/kibana-access.log" commonvhost

  ProxyPreserveHost On
  ProxyRequests On
LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule ssl_module modules/mod_ssl.so 

SSLEngine on
SSLCertificateFile "/usr/local/apache2/conf/extra/cert.pem"
SSLCertificateKeyFile "/usr/local/apache2/conf/extra/key.pem"

  <Location /logout>
    RequestHeader unset Authorization
    Redirect "/logout" "/secure/redirect_uri?logout=https://httpd:8056"
  </Location>

  # Auth with OpenID Connect
  # yum install mod_auth_openidc

#LogLevel Debug
  OIDCProviderMetadataURL http://openidc:8080/auth/realms/master/.well-known/openid-configuration
  OIDCClientID kibana
  OIDCClientSecret 6de74b4c-097a-490f-9065-bfa96eecf656
  #this is required by mod_auth_openidc
  OIDCCryptoPassphrase kibana
  # OIDCRedirectURI is a vanity URL that must point to a path protected by this module but must NOT point to any content
  OIDCRedirectURI /secure/redirect_uri
  #OIDCDefaultURL http://httpd:8056/index.html
  # Set REMOTE_USER
  OIDCRemoteUserClaim preferred_username
#OIDCRemoteUserClaim email
#	OIDCScope "openid email"
OIDCProviderTokenEndpointAuth client_secret_basic
#OIDCCacheType file
#    OIDCCacheDir /tmp/
#    OIDCCacheFileCleanInterval 10

  <Proxy *>
    AuthType openid-connect
    Require valid-user

    Define ES_USERNAME %{REMOTE_USER}
    Define ES_PASSWORD "linux123"
    Define CREDENTIALS ${ES_USERNAME}:${ES_PASSWORD}
    RequestHeader set Authorization "expr=Basic %{base64:${CREDENTIALS}}"
  </Proxy>
  ProxyPass /  http://kibana:5601/
  ProxyPassReverse / http://kibana:5601/

  # Nodejs headers test

  # Kibana

</VirtualHost>
<VirtualHost *:80>
    ServerAdmin webmaster@dummy-host.example.com
    DocumentRoot "/usr/local/apache2/docs/dummy-host.example.com"
    ServerName dummy-host.example.com
    ServerAlias www.dummy-host.example.com
    ErrorLog "logs/dummy-host.example.com-error_log"
    CustomLog "logs/dummy-host.example.com-access_log" common
</VirtualHost>

<VirtualHost *:80>
    ServerAdmin webmaster@dummy-host2.example.com
    DocumentRoot "/usr/local/apache2/docs/dummy-host2.example.com"
    ServerName dummy-host2.example.com
    ErrorLog "logs/dummy-host2.example.com-error_log"
    CustomLog "logs/dummy-host2.example.com-access_log" common
</VirtualHost>


